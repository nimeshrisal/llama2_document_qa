{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Home\\\\Desktop\\\\llama-qa\\\\frontend\\\\src\\\\components\\\\qaPage.tsx\",\n  _s = $RefreshSig$();\n// components/QAInterface.tsx\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Input, Button, Spin, Alert, Typography } from \"antd\";\nimport { UserOutlined, RobotOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Text\n} = Typography;\nconst QAInterface = ({\n  loading,\n  error,\n  onSubmit\n}) => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const endRef = useRef(null);\n  const handleSend = () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      type: \"question\",\n      text: input\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput(\"\");\n    const response = onSubmit(input);\n    setTimeout(() => {\n      setMessages(prev => [...prev, {\n        type: \"answer\",\n        text: response\n      }]);\n    }, 500);\n  };\n  useEffect(() => {\n    var _endRef$current;\n    (_endRef$current = endRef.current) === null || _endRef$current === void 0 ? void 0 : _endRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full bg-gray-50 rounded-lg border border-gray-200\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto p-8 space-y-10\",\n      children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex ${msg.type === \"question\" ? \"justify-start\" : \"justify-center\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex items-start gap-3 p-4 rounded-lg shadow-md border max-w-[80%] ${msg.type === \"question\" ? \"bg-white border-blue-200\" : \"bg-blue-50 border-blue-300\"}`,\n          children: msg.type === \"question\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(UserOutlined, {\n              className: \"mt-1 text-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              className: \"whitespace-pre-line\",\n              children: msg.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(RobotOutlined, {\n              className: \"mt-1 text-green-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              className: \"whitespace-pre-line\",\n              children: msg.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-start\",\n        children: /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: endRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      type: \"error\",\n      message: error,\n      showIcon: true,\n      className: \"mx-4 mb-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 border-t border-gray-200 bg-white flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onPressEnter: handleSend,\n        placeholder: \"Ask a question...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(QAInterface, \"vdLqsoiaTp+IIt2OwQIRKEHmwPY=\");\n_c = QAInterface;\nexport default QAInterface;\nvar _c;\n$RefreshReg$(_c, \"QAInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Input","Button","Spin","Alert","Typography","UserOutlined","RobotOutlined","jsxDEV","_jsxDEV","Fragment","_Fragment","Text","QAInterface","loading","error","onSubmit","_s","input","setInput","messages","setMessages","endRef","handleSend","trim","userMessage","type","text","prev","response","setTimeout","_endRef$current","current","scrollIntoView","behavior","className","children","map","msg","idx","fileName","_jsxFileName","lineNumber","columnNumber","ref","message","showIcon","value","onChange","e","target","onPressEnter","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Home/Desktop/llama-qa/frontend/src/components/qaPage.tsx"],"sourcesContent":["// components/QAInterface.tsx\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport { Input, Button, Spin, Alert, Typography } from \"antd\";\r\nimport { UserOutlined, RobotOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Text } = Typography;\r\n\r\ninterface Message {\r\n  type: \"question\" | \"answer\";\r\n  text: string;\r\n}\r\n\r\ninterface Props {\r\n  loading: boolean;\r\n  error: string;\r\n  onSubmit: (question: string) => string;\r\n}\r\n\r\nconst QAInterface: React.FC<Props> = ({ loading, error, onSubmit }) => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const endRef = useRef<HTMLDivElement>(null);\r\n\r\n  const handleSend = () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage: Message = { type: \"question\", text: input };\r\n    setMessages((prev) => [...prev, userMessage]);\r\n    setInput(\"\");\r\n\r\n    const response = onSubmit(input);\r\n    setTimeout(() => {\r\n      setMessages((prev) => [...prev, { type: \"answer\", text: response }]);\r\n    }, 500);\r\n  };\r\n\r\n  useEffect(() => {\r\n    endRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-full bg-gray-50 rounded-lg border border-gray-200\">\r\n      {/* Chat history */}\r\n      <div className=\"flex-1 overflow-y-auto p-8 space-y-10\">\r\n        {messages.map((msg, idx) => (\r\n          <div\r\n            key={idx}\r\n            className={`flex ${\r\n              msg.type === \"question\" ? \"justify-start\" : \"justify-center\"\r\n            }`}\r\n          >\r\n            <div\r\n              className={`flex items-start gap-3 p-4 rounded-lg shadow-md border max-w-[80%] ${\r\n                msg.type === \"question\"\r\n                  ? \"bg-white border-blue-200\"\r\n                  : \"bg-blue-50 border-blue-300\"\r\n              }`}\r\n            >\r\n              {msg.type === \"question\" ? (\r\n                <>\r\n                  <UserOutlined className=\"mt-1 text-blue-500\" />\r\n                  <Text className=\"whitespace-pre-line\">\r\n                    &#9;{msg.text}\r\n                  </Text>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <RobotOutlined className=\"mt-1 text-green-600\" />\r\n                  <Text className=\"whitespace-pre-line\">\r\n                    &#9;{msg.text}\r\n                  </Text>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n        {loading && (\r\n          <div className=\"flex justify-start\">\r\n            <Spin />\r\n          </div>\r\n        )}\r\n        <div ref={endRef} />\r\n      </div>\r\n\r\n      {/* Error */}\r\n      {error && <Alert type=\"error\" message={error} showIcon className=\"mx-4 mb-2\" />}\r\n\r\n      {/* Input */}\r\n      <div className=\"p-4 border-t border-gray-200 bg-white flex gap-2\">\r\n        <Input\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onPressEnter={handleSend}\r\n          placeholder=\"Ask a question...\"\r\n        />\r\n        <Button type=\"primary\" onClick={handleSend}>\r\n          Send\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QAInterface;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
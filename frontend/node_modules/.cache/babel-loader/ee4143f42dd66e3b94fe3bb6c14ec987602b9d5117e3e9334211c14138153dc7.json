{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Home\\\\Desktop\\\\llama-qa\\\\frontend\\\\src\\\\components\\\\qaPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Input, Button, Typography } from 'antd';\nimport { UserOutlined, RobotOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Text\n} = Typography;\nconst QAPage = () => {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [messages, setMessages] = useState([]);\n  const handleSend = () => {\n    if (!inputValue.trim()) return;\n    setMessages(prev => [...prev, {\n      type: 'question',\n      content: inputValue\n    }, {\n      type: 'answer',\n      content: 'This is a dummy AI-generated answer.'\n    }]);\n    setInputValue('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '24px',\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n      level: 3,\n      children: \"\\uD83E\\uDD16 Chat with Document\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        overflowY: 'auto',\n        marginBottom: '16px'\n      },\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: msg.type === 'question' ? 'flex-start' : 'center',\n          marginBottom: 24\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: '1px solid #d9d9d9',\n            borderRadius: 8,\n            padding: '10px 14px',\n            backgroundColor: msg.type === 'question' ? '#f5f5f5' : '#e6f7ff',\n            width: '100%',\n            maxWidth: '80%'\n          },\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            children: [msg.type === 'question' ? /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 44\n            }, this) : /*#__PURE__*/_jsxDEV(RobotOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 63\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginLeft: 8\n              },\n              children: msg.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input.TextArea, {\n      rows: 2,\n      value: inputValue,\n      onChange: e => setInputValue(e.target.value),\n      placeholder: \"Ask a question...\",\n      style: {\n        marginBottom: 8\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: handleSend,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(QAPage, \"eWo+kl8Gtoyyghyz4XClkXtXx2I=\");\n_c = QAPage;\nexport default QAPage;\nvar _c;\n$RefreshReg$(_c, \"QAPage\");","map":{"version":3,"names":["React","useState","Input","Button","Typography","UserOutlined","RobotOutlined","jsxDEV","_jsxDEV","Text","QAPage","_s","inputValue","setInputValue","messages","setMessages","handleSend","trim","prev","type","content","style","padding","height","display","flexDirection","children","Title","level","fileName","_jsxFileName","lineNumber","columnNumber","flex","overflowY","marginBottom","map","msg","index","alignItems","border","borderRadius","backgroundColor","width","maxWidth","marginLeft","TextArea","rows","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Home/Desktop/llama-qa/frontend/src/components/qaPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Input, Button, Typography } from 'antd';\r\nimport { UserOutlined, RobotOutlined } from '@ant-design/icons';\r\n\r\nconst { Text } = Typography;\r\n\r\nconst QAPage: React.FC = () => {\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [messages, setMessages] = useState<{ type: 'question' | 'answer'; content: string }[]>([]);\r\n\r\n  const handleSend = () => {\r\n    if (!inputValue.trim()) return;\r\n\r\n    setMessages(prev => [\r\n      ...prev,\r\n      { type: 'question', content: inputValue },\r\n      { type: 'answer', content: 'This is a dummy AI-generated answer.' },\r\n    ]);\r\n    setInputValue('');\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '24px', height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n      <Typography.Title level={3}>ðŸ¤– Chat with Document</Typography.Title>\r\n\r\n      <div style={{ flex: 1, overflowY: 'auto', marginBottom: '16px' }}>\r\n        {messages.map((msg, index) => (\r\n          <div\r\n            key={index}\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: msg.type === 'question' ? 'flex-start' : 'center',\r\n              marginBottom: 24,\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                border: '1px solid #d9d9d9',\r\n                borderRadius: 8,\r\n                padding: '10px 14px',\r\n                backgroundColor: msg.type === 'question' ? '#f5f5f5' : '#e6f7ff',\r\n                width: '100%',\r\n                maxWidth: '80%',\r\n              }}\r\n            >\r\n              <Text>\r\n                {msg.type === 'question' ? <UserOutlined /> : <RobotOutlined />}\r\n                <span style={{ marginLeft: 8 }}>{msg.content}</span>\r\n              </Text>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <Input.TextArea\r\n        rows={2}\r\n        value={inputValue}\r\n        onChange={e => setInputValue(e.target.value)}\r\n        placeholder=\"Ask a question...\"\r\n        style={{ marginBottom: 8 }}\r\n      />\r\n      <Button type=\"primary\" onClick={handleSend}>\r\n        Send\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QAPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
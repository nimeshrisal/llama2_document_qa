{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Home\\\\Desktop\\\\llama-qa\\\\frontend\\\\src\\\\components\\\\qaPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Input, Typography, Spin, message } from 'antd';\nimport { UserOutlined, RobotOutlined, SendOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Text\n} = Typography;\nconst QAPage = () => {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // Auto-scroll to bottom when messages change\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleSend = async () => {\n    if (!inputValue.trim() || isLoading) return;\n    const question = inputValue;\n    setInputValue('');\n\n    // Add user question\n    setMessages(prev => [...prev, {\n      type: 'question',\n      content: question\n    }, {\n      type: 'answer',\n      content: '',\n      loading: true\n    }]);\n    setIsLoading(true);\n    try {\n      // 1. First ensure documents are indexed\n      await axios.post('http://localhost:8000/index');\n\n      // 2. Get answer from FastAPI backend\n      const response = await axios.post('http://localhost:8000/ask', {\n        question: question\n      });\n\n      // Update the last message with the actual answer\n      setMessages(prev => {\n        const newMessages = [...prev];\n        newMessages[newMessages.length - 1] = {\n          type: 'answer',\n          content: response.data.answer || \"Sorry, I couldn't find an answer.\",\n          loading: false\n        };\n        return newMessages;\n      });\n    } catch (error) {\n      message.error('Failed to get answer');\n      setMessages(prev => {\n        const newMessages = [...prev];\n        newMessages[newMessages.length - 1] = {\n          type: 'answer',\n          content: \"Error: Couldn't connect to the AI service\",\n          loading: false\n        };\n        return newMessages;\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '24px',\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n      level: 3,\n      children: \"\\uD83D\\uDC1C Chat with Document\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        overflowY: 'auto',\n        marginBottom: '16px',\n        paddingRight: '8px'\n      },\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: msg.type === 'question' ? 'flex-start' : 'flex-start',\n          marginBottom: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: '1px solid #d9d9d9',\n            borderRadius: 8,\n            padding: '12px 16px',\n            backgroundColor: msg.type === 'question' ? '#f5f5f5' : '#e6f7ff',\n            width: 'fit-content',\n            maxWidth: '80%'\n          },\n          children: msg.loading ? /*#__PURE__*/_jsxDEV(Spin, {\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Text, {\n            children: [msg.type === 'question' ? /*#__PURE__*/_jsxDEV(UserOutlined, {\n              style: {\n                color: '#1890ff'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(RobotOutlined, {\n              style: {\n                color: '#52c41a'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginLeft: 8\n              },\n              children: msg.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        onPressEnter: handleSend,\n        placeholder: \"Ask a question about your documents...\",\n        disabled: isLoading,\n        style: {\n          flex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SendOutlined, {\n        onClick: handleSend,\n        style: {\n          fontSize: 22,\n          color: isLoading ? '#d9d9d9' : '#1890ff',\n          cursor: isLoading ? 'not-allowed' : 'pointer',\n          transform: 'rotate(-45deg)',\n          transition: 'all 0.2s'\n        },\n        onMouseEnter: e => !isLoading && (e.currentTarget.style.transform = 'scale(1.2) rotate(-45deg)'),\n        onMouseLeave: e => e.currentTarget.style.transform = 'rotate(-45deg)'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(QAPage, \"XdeinUwLcxbOA1CnxUxYkE8880c=\");\n_c = QAPage;\nexport default QAPage;\nvar _c;\n$RefreshReg$(_c, \"QAPage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Input","Typography","Spin","message","UserOutlined","RobotOutlined","SendOutlined","axios","jsxDEV","_jsxDEV","Text","QAPage","_s","inputValue","setInputValue","messages","setMessages","isLoading","setIsLoading","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSend","trim","question","prev","type","content","loading","post","response","newMessages","length","data","answer","error","style","padding","height","display","flexDirection","children","Title","level","fileName","_jsxFileName","lineNumber","columnNumber","flex","overflowY","marginBottom","paddingRight","map","msg","index","alignItems","border","borderRadius","backgroundColor","width","maxWidth","size","color","marginLeft","ref","gap","value","onChange","e","target","onPressEnter","placeholder","disabled","onClick","fontSize","cursor","transform","transition","onMouseEnter","currentTarget","onMouseLeave","_c","$RefreshReg$"],"sources":["C:/Users/Home/Desktop/llama-qa/frontend/src/components/qaPage.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { Input, Typography, Spin, message } from 'antd';\r\nimport { UserOutlined, RobotOutlined, SendOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\n\r\nconst { Text } = Typography;\r\n\r\ninterface Message {\r\n  type: 'question' | 'answer';\r\n  content: string;\r\n  loading?: boolean;\r\n}\r\n\r\nconst QAPage: React.FC = () => {\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Auto-scroll to bottom when messages change\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  const handleSend = async () => {\r\n    if (!inputValue.trim() || isLoading) return;\r\n\r\n    const question = inputValue;\r\n    setInputValue('');\r\n    \r\n    // Add user question\r\n    setMessages(prev => [\r\n      ...prev,\r\n      { type: 'question', content: question },\r\n      { type: 'answer', content: '', loading: true }\r\n    ]);\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // 1. First ensure documents are indexed\r\n      await axios.post('http://localhost:8000/index');\r\n      \r\n      // 2. Get answer from FastAPI backend\r\n      const response = await axios.post('http://localhost:8000/ask', {\r\n        question: question\r\n      });\r\n\r\n      // Update the last message with the actual answer\r\n      setMessages(prev => {\r\n        const newMessages = [...prev];\r\n        newMessages[newMessages.length - 1] = {\r\n          type: 'answer',\r\n          content: response.data.answer || \"Sorry, I couldn't find an answer.\",\r\n          loading: false\r\n        };\r\n        return newMessages;\r\n      });\r\n    } catch (error) {\r\n      message.error('Failed to get answer');\r\n      setMessages(prev => {\r\n        const newMessages = [...prev];\r\n        newMessages[newMessages.length - 1] = {\r\n          type: 'answer',\r\n          content: \"Error: Couldn't connect to the AI service\",\r\n          loading: false\r\n        };\r\n        return newMessages;\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '24px', height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n      <Typography.Title level={3}>🐜 Chat with Document</Typography.Title>\r\n\r\n      <div style={{ flex: 1, overflowY: 'auto', marginBottom: '16px', paddingRight: '8px' }}>\r\n        {messages.map((msg, index) => (\r\n          <div\r\n            key={index}\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: msg.type === 'question' ? 'flex-start' : 'flex-start',\r\n              marginBottom: 16,\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                border: '1px solid #d9d9d9',\r\n                borderRadius: 8,\r\n                padding: '12px 16px',\r\n                backgroundColor: msg.type === 'question' ? '#f5f5f5' : '#e6f7ff',\r\n                width: 'fit-content',\r\n                maxWidth: '80%',\r\n              }}\r\n            >\r\n              {msg.loading ? (\r\n                <Spin size=\"small\" />\r\n              ) : (\r\n                <Text>\r\n                  {msg.type === 'question' ? (\r\n                    <UserOutlined style={{ color: '#1890ff' }} />\r\n                  ) : (\r\n                    <RobotOutlined style={{ color: '#52c41a' }} />\r\n                  )}\r\n                  <span style={{ marginLeft: 8 }}>{msg.content}</span>\r\n                </Text>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n        <Input\r\n          value={inputValue}\r\n          onChange={e => setInputValue(e.target.value)}\r\n          onPressEnter={handleSend}\r\n          placeholder=\"Ask a question about your documents...\"\r\n          disabled={isLoading}\r\n          style={{ flex: 1 }}\r\n        />\r\n        <SendOutlined\r\n          onClick={handleSend}\r\n          style={{\r\n            fontSize: 22,\r\n            color: isLoading ? '#d9d9d9' : '#1890ff',\r\n            cursor: isLoading ? 'not-allowed' : 'pointer',\r\n            transform: 'rotate(-45deg)',\r\n            transition: 'all 0.2s',\r\n          }}\r\n          onMouseEnter={e => !isLoading && (e.currentTarget.style.transform = 'scale(1.2) rotate(-45deg)')}\r\n          onMouseLeave={e => e.currentTarget.style.transform = 'rotate(-45deg)'}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QAPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
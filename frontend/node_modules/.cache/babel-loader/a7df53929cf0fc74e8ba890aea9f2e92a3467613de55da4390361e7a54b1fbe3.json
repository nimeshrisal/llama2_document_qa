{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Home\\\\Desktop\\\\llama-qa\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\n// components/QAInterface.tsx\nimport React, { useState } from \"react\";\nimport { Input, Button, Spin, Alert } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QAInterface = ({\n  loading,\n  error,\n  onSubmit\n}) => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const handleSend = () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      type: \"question\",\n      text: input\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput(\"\");\n\n    // Simulate AI response\n    const response = onSubmit(input);\n    setMessages(prev => [...prev, {\n      type: \"answer\",\n      text: response\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto space-y-4 pr-2\",\n      children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `max-w-[75%] px-4 py-2 rounded-xl ${msg.type === \"question\" ? \"bg-blue-100 self-end text-right\" : \"bg-gray-100 self-start text-left\"}`,\n        children: msg.text\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"self-start\",\n        children: /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      type: \"error\",\n      message: error,\n      showIcon: true,\n      className: \"mb-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2 pt-4\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onPressEnter: handleSend,\n        placeholder: \"Ask a question...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(QAInterface, \"WeNpxDEIB1TvYizD4iKTeHepowk=\");\n_c = QAInterface;\nexport default QAInterface;\nvar _c;\n$RefreshReg$(_c, \"QAInterface\");","map":{"version":3,"names":["React","useState","Input","Button","Spin","Alert","jsxDEV","_jsxDEV","QAInterface","loading","error","onSubmit","_s","input","setInput","messages","setMessages","handleSend","trim","userMessage","type","text","prev","response","className","children","map","msg","idx","fileName","_jsxFileName","lineNumber","columnNumber","message","showIcon","value","onChange","e","target","onPressEnter","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Home/Desktop/llama-qa/frontend/src/App.tsx"],"sourcesContent":["// components/QAInterface.tsx\nimport React, { useState } from \"react\";\nimport { Input, Button, Spin, Alert } from \"antd\";\n\ninterface Message {\n  type: \"question\" | \"answer\";\n  text: string;\n}\n\ninterface Props {\n  loading: boolean;\n  error: string;\n  onSubmit: (question: string) => string;\n}\n\nconst QAInterface: React.FC<Props> = ({ loading, error, onSubmit }) => {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState<Message[]>([]);\n\n  const handleSend = () => {\n    if (!input.trim()) return;\n\n    const userMessage: Message = { type: \"question\", text: input };\n    setMessages((prev) => [...prev, userMessage]);\n    setInput(\"\");\n\n    // Simulate AI response\n    const response = onSubmit(input);\n    setMessages((prev) => [...prev, { type: \"answer\", text: response }]);\n  };\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      {/* Chat history */}\n      <div className=\"flex-1 overflow-y-auto space-y-4 pr-2\">\n        {messages.map((msg, idx) => (\n          <div\n            key={idx}\n            className={`max-w-[75%] px-4 py-2 rounded-xl ${\n              msg.type === \"question\"\n                ? \"bg-blue-100 self-end text-right\"\n                : \"bg-gray-100 self-start text-left\"\n            }`}\n          >\n            {msg.text}\n          </div>\n        ))}\n        {loading && (\n          <div className=\"self-start\">\n            <Spin />\n          </div>\n        )}\n      </div>\n\n      {/* Error */}\n      {error && <Alert type=\"error\" message={error} showIcon className=\"mb-2\" />}\n\n      {/* Input */}\n      <div className=\"flex gap-2 pt-4\">\n        <Input\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onPressEnter={handleSend}\n          placeholder=\"Ask a question...\"\n        />\n        <Button type=\"primary\" onClick={handleSend}>\n          Send\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default QAInterface;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
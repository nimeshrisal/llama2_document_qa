{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Home\\\\Desktop\\\\llama-qa\\\\frontend\\\\src\\\\components\\\\uploadPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Upload, Button, Typography, Spin, Descriptions, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\nconst UploadPage = () => {\n  _s();\n  const [fileList, setFileList] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [uploadedFile, setUploadedFile] = useState(null);\n  const handleChange = info => {\n    setFileList(info.fileList);\n  };\n  const handleUpload = async () => {\n    if (fileList.length === 0) {\n      message.warning('Please select a file first!');\n      return;\n    }\n    const file = fileList[0];\n    const formData = new FormData();\n    formData.append('file', file.originFileObj);\n    setUploading(true);\n    try {\n      // Replace this with your actual upload API call\n      const mockUpload = () => {\n        return new Promise(resolve => {\n          setTimeout(() => {\n            resolve({\n              status: 'success',\n              url: 'https://example.com/uploads/' + file.name\n            });\n          }, 2000);\n        });\n      };\n      const response = await mockUpload();\n      if (response.status === 'success') {\n        message.success('File uploaded successfully!');\n        setUploadedFile({\n          uid: file.uid,\n          name: file.name || 'Unknown',\n          size: file.size || 0,\n          type: file.type || 'Unknown',\n          url: response.url\n        });\n      }\n    } catch (error) {\n      message.error('Upload failed. Please try again.');\n      console.error('Upload error:', error);\n    } finally {\n      setUploading(false);\n    }\n  };\n  const getFileExtension = filename => {\n    return filename.split('.').pop();\n  };\n  const formatFileSize = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2) + ' ' + sizes[i]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '24px',\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      level: 3,\n      children: \"\\uD83D\\uDCC1 Upload Document\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Upload, {\n      beforeUpload: () => false // prevent automatic upload\n      ,\n      onChange: handleChange,\n      fileList: fileList,\n      maxCount: 1,\n      accept: \".pdf,.doc,.docx,.txt\",\n      disabled: uploading,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 23\n        }, this),\n        children: \"Select File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), fileList.length > 0 && !uploadedFile && /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: handleUpload,\n      disabled: uploading,\n      loading: uploading,\n      style: {\n        marginTop: 16\n      },\n      children: uploading ? 'Uploading...' : 'Start Upload'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), uploading && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 24,\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Spin, {\n        tip: \"Uploading your file...\",\n        size: \"large\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '50px',\n            background: 'rgba(0, 0, 0, 0.05)',\n            borderRadius: '4px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), !uploading && uploadedFile && /*#__PURE__*/_jsxDEV(Descriptions, {\n      title: \"Uploaded File Details\",\n      bordered: true,\n      column: 1,\n      size: \"small\",\n      style: {\n        marginTop: 24\n      },\n      children: [/*#__PURE__*/_jsxDEV(Descriptions.Item, {\n        label: \"File Name\",\n        children: uploadedFile.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n        label: \"Extension\",\n        children: getFileExtension(uploadedFile.name)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n        label: \"Type\",\n        children: uploadedFile.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n        label: \"Size\",\n        children: formatFileSize(uploadedFile.size)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), uploadedFile.url && /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n        label: \"URL\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: uploadedFile.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"View File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadPage, \"KgFm45mPtyhxtv+zWcF1+lYwSh0=\");\n_c = UploadPage;\nexport default UploadPage;\nvar _c;\n$RefreshReg$(_c, \"UploadPage\");","map":{"version":3,"names":["React","useState","Upload","Button","Typography","Spin","Descriptions","message","UploadOutlined","jsxDEV","_jsxDEV","Title","UploadPage","_s","fileList","setFileList","uploading","setUploading","uploadedFile","setUploadedFile","handleChange","info","handleUpload","length","warning","file","formData","FormData","append","originFileObj","mockUpload","Promise","resolve","setTimeout","status","url","name","response","success","uid","size","type","error","console","getFileExtension","filename","split","pop","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","style","padding","height","display","flexDirection","children","level","fileName","_jsxFileName","lineNumber","columnNumber","beforeUpload","onChange","maxCount","accept","disabled","icon","onClick","loading","marginTop","textAlign","tip","background","borderRadius","title","bordered","column","Item","label","href","target","rel","_c","$RefreshReg$"],"sources":["C:/Users/Home/Desktop/llama-qa/frontend/src/components/uploadPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Upload, Button, Typography, Spin, Descriptions, message } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport type { UploadFile } from 'antd/es/upload/interface';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst UploadPage: React.FC = () => {\r\n  const [fileList, setFileList] = useState<UploadFile[]>([]);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [uploadedFile, setUploadedFile] = useState<{\r\n    uid: string;\r\n    name: string;\r\n    size: number;\r\n    type: string;\r\n    url?: string;\r\n  } | null>(null);\r\n\r\n  const handleChange = (info: { file: UploadFile; fileList: UploadFile[] }) => {\r\n    setFileList(info.fileList);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (fileList.length === 0) {\r\n      message.warning('Please select a file first!');\r\n      return;\r\n    }\r\n\r\n    const file = fileList[0];\r\n    const formData = new FormData();\r\n    formData.append('file', file.originFileObj as File);\r\n\r\n    setUploading(true);\r\n\r\n    try {\r\n      // Replace this with your actual upload API call\r\n      const mockUpload = () => {\r\n        return new Promise((resolve) => {\r\n          setTimeout(() => {\r\n            resolve({\r\n              status: 'success',\r\n              url: 'https://example.com/uploads/' + file.name\r\n            });\r\n          }, 2000);\r\n        });\r\n      };\r\n\r\n      const response = await mockUpload();\r\n\r\n      if ((response as any).status === 'success') {\r\n        message.success('File uploaded successfully!');\r\n        setUploadedFile({\r\n          uid: file.uid,\r\n          name: file.name || 'Unknown',\r\n          size: file.size || 0,\r\n          type: file.type || 'Unknown',\r\n          url: (response as any).url\r\n        });\r\n      }\r\n    } catch (error) {\r\n      message.error('Upload failed. Please try again.');\r\n      console.error('Upload error:', error);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const getFileExtension = (filename: string) => {\r\n    return filename.split('.').pop();\r\n  };\r\n\r\n  const formatFileSize = (bytes: number) => {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2) + ' ' + sizes[i]);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '24px', height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n      <Title level={3}>📁 Upload Document</Title>\r\n\r\n      <Upload\r\n        beforeUpload={() => false} // prevent automatic upload\r\n        onChange={handleChange}\r\n        fileList={fileList}\r\n        maxCount={1}\r\n        accept=\".pdf,.doc,.docx,.txt\"\r\n        disabled={uploading}\r\n      >\r\n        <Button icon={<UploadOutlined />}>Select File</Button>\r\n      </Upload>\r\n\r\n      {fileList.length > 0 && !uploadedFile && (\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={handleUpload}\r\n          disabled={uploading}\r\n          loading={uploading}\r\n          style={{ marginTop: 16 }}\r\n        >\r\n          {uploading ? 'Uploading...' : 'Start Upload'}\r\n        </Button>\r\n      )}\r\n\r\n      {uploading && (\r\n        <div style={{ marginTop: 24, textAlign: 'center' }}>\r\n          <Spin tip=\"Uploading your file...\" size=\"large\">\r\n            <div style={{ padding: '50px', background: 'rgba(0, 0, 0, 0.05)', borderRadius: '4px' }} />\r\n          </Spin>\r\n        </div>\r\n      )}\r\n\r\n      {!uploading && uploadedFile && (\r\n        <Descriptions\r\n          title=\"Uploaded File Details\"\r\n          bordered\r\n          column={1}\r\n          size=\"small\"\r\n          style={{ marginTop: 24 }}\r\n        >\r\n          <Descriptions.Item label=\"File Name\">{uploadedFile.name}</Descriptions.Item>\r\n          <Descriptions.Item label=\"Extension\">\r\n            {getFileExtension(uploadedFile.name)}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"Type\">{uploadedFile.type}</Descriptions.Item>\r\n          <Descriptions.Item label=\"Size\">\r\n            {formatFileSize(uploadedFile.size)}\r\n          </Descriptions.Item>\r\n          {uploadedFile.url && (\r\n            <Descriptions.Item label=\"URL\">\r\n              <a href={uploadedFile.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                View File\r\n              </a>\r\n            </Descriptions.Item>\r\n          )}\r\n        </Descriptions>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
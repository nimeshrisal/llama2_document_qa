{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Home\\\\Desktop\\\\llama-qa\\\\frontend\\\\src\\\\components\\\\qaPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Input, Typography, Spin, message } from 'antd';\nimport { UserOutlined, RobotOutlined, SendOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Text\n} = Typography;\nconst QAPage = () => {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [fileUploaded, setFileUploaded] = useState(false);\n  const history = useHistory();\n\n  // Check if the document is uploaded (can be done via localStorage, or check if file exists on the backend)\n  useEffect(() => {\n    // Example of checking if a document exists in localStorage or via an API\n    // Here we'll simulate checking the file upload status by assuming the file has been uploaded.\n    // You can check the backend or localStorage.\n    const uploaded = localStorage.getItem('fileUploaded');\n    if (!uploaded) {\n      message.error('Please upload a document first.');\n      history.push('/upload'); // Redirect to the upload page if no document is uploaded\n    } else {\n      setFileUploaded(true);\n    }\n  }, [history]);\n  const handleSend = async () => {\n    if (!inputValue.trim() || isLoading) return;\n    const question = inputValue;\n    setInputValue('');\n    setMessages(prev => [...prev, {\n      type: 'question',\n      content: question\n    }, {\n      type: 'answer',\n      content: '',\n      loading: true\n    }]);\n    setIsLoading(true);\n    try {\n      // Call the backend API to process the question\n      const response = await axios.post('http://localhost:8000/ask', {\n        question\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      setMessages(prev => {\n        const newMessages = [...prev];\n        newMessages[newMessages.length - 1] = {\n          type: 'answer',\n          content: response.data.answer || \"Sorry, I couldn't find an answer.\",\n          loading: false\n        };\n        return newMessages;\n      });\n    } catch (error) {\n      console.error('Error:', error);\n      message.error('Failed to get answer');\n      setMessages(prev => {\n        const newMessages = [...prev];\n        newMessages[newMessages.length - 1] = {\n          type: 'answer',\n          content: \"Error: Couldn't connect to the AI service\",\n          loading: false\n        };\n        return newMessages;\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '24px',\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n      level: 3,\n      children: \"Chat with Document\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        overflowY: 'auto',\n        marginBottom: '16px',\n        paddingRight: '8px'\n      },\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'flex-start',\n          marginBottom: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: '1px solid #d9d9d9',\n            borderRadius: 8,\n            padding: '12px 16px',\n            backgroundColor: msg.type === 'question' ? '#f5f5f5' : '#e6f7ff',\n            width: 'fit-content',\n            maxWidth: '80%'\n          },\n          children: msg.loading ? /*#__PURE__*/_jsxDEV(Spin, {\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Text, {\n            children: [msg.type === 'question' ? /*#__PURE__*/_jsxDEV(UserOutlined, {\n              style: {\n                color: '#1890ff'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(RobotOutlined, {\n              style: {\n                color: '#52c41a'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginLeft: 8\n              },\n              children: msg.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        onPressEnter: handleSend,\n        placeholder: \"Ask a question about your documents...\",\n        disabled: isLoading || !fileUploaded,\n        style: {\n          flex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SendOutlined, {\n        onClick: handleSend,\n        style: {\n          fontSize: 22,\n          color: isLoading || !fileUploaded ? '#d9d9d9' : '#1890ff',\n          cursor: isLoading || !fileUploaded ? 'not-allowed' : 'pointer',\n          transform: 'rotate(-45deg)',\n          transition: 'all 0.2s'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(QAPage, \"Ulk5niZTSX/HTM/LFmfOs96SAnw=\", false, function () {\n  return [useHistory];\n});\n_c = QAPage;\nexport default QAPage;\nvar _c;\n$RefreshReg$(_c, \"QAPage\");","map":{"version":3,"names":["React","useState","useEffect","Input","Typography","Spin","message","UserOutlined","RobotOutlined","SendOutlined","axios","useHistory","jsxDEV","_jsxDEV","Text","QAPage","_s","inputValue","setInputValue","messages","setMessages","isLoading","setIsLoading","fileUploaded","setFileUploaded","history","uploaded","localStorage","getItem","error","push","handleSend","trim","question","prev","type","content","loading","response","post","headers","newMessages","length","data","answer","console","style","padding","height","display","flexDirection","children","Title","level","fileName","_jsxFileName","lineNumber","columnNumber","flex","overflowY","marginBottom","paddingRight","map","msg","index","alignItems","border","borderRadius","backgroundColor","width","maxWidth","size","color","marginLeft","gap","value","onChange","e","target","onPressEnter","placeholder","disabled","onClick","fontSize","cursor","transform","transition","_c","$RefreshReg$"],"sources":["C:/Users/Home/Desktop/llama-qa/frontend/src/components/qaPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Input, Typography, Spin, message, Button } from 'antd';\r\nimport { UserOutlined, RobotOutlined, SendOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst { Text } = Typography;\r\n\r\ninterface Message {\r\n  type: 'question' | 'answer';\r\n  content: string;\r\n  loading?: boolean;\r\n}\r\n\r\nconst QAPage: React.FC = () => {\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [fileUploaded, setFileUploaded] = useState(false);\r\n  const history = useHistory();\r\n\r\n  // Check if the document is uploaded (can be done via localStorage, or check if file exists on the backend)\r\n  useEffect(() => {\r\n    // Example of checking if a document exists in localStorage or via an API\r\n    // Here we'll simulate checking the file upload status by assuming the file has been uploaded.\r\n    // You can check the backend or localStorage.\r\n    const uploaded = localStorage.getItem('fileUploaded');\r\n    if (!uploaded) {\r\n      message.error('Please upload a document first.');\r\n      history.push('/upload');  // Redirect to the upload page if no document is uploaded\r\n    } else {\r\n      setFileUploaded(true);\r\n    }\r\n  }, [history]);\r\n\r\n  const handleSend = async () => {\r\n    if (!inputValue.trim() || isLoading) return;\r\n\r\n    const question = inputValue;\r\n    setInputValue('');\r\n\r\n    setMessages(prev => [\r\n      ...prev,\r\n      { type: 'question', content: question },\r\n      { type: 'answer', content: '', loading: true }\r\n    ]);\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // Call the backend API to process the question\r\n      const response = await axios.post('http://localhost:8000/ask', { question }, {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      setMessages(prev => {\r\n        const newMessages = [...prev];\r\n        newMessages[newMessages.length - 1] = {\r\n          type: 'answer',\r\n          content: response.data.answer || \"Sorry, I couldn't find an answer.\",\r\n          loading: false\r\n        };\r\n        return newMessages;\r\n      });\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      message.error('Failed to get answer');\r\n      setMessages(prev => {\r\n        const newMessages = [...prev];\r\n        newMessages[newMessages.length - 1] = {\r\n          type: 'answer',\r\n          content: \"Error: Couldn't connect to the AI service\",\r\n          loading: false\r\n        };\r\n        return newMessages;\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '24px', height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n      <Typography.Title level={3}>Chat with Document</Typography.Title>\r\n\r\n      <div style={{ flex: 1, overflowY: 'auto', marginBottom: '16px', paddingRight: '8px' }}>\r\n        {messages.map((msg, index) => (\r\n          <div\r\n            key={index}\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'flex-start',\r\n              marginBottom: 16,\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                border: '1px solid #d9d9d9',\r\n                borderRadius: 8,\r\n                padding: '12px 16px',\r\n                backgroundColor: msg.type === 'question' ? '#f5f5f5' : '#e6f7ff',\r\n                width: 'fit-content',\r\n                maxWidth: '80%',\r\n              }}\r\n            >\r\n              {msg.loading ? (\r\n                <Spin size=\"small\" />\r\n              ) : (\r\n                <Text>\r\n                  {msg.type === 'question' ? (\r\n                    <UserOutlined style={{ color: '#1890ff' }} />\r\n                  ) : (\r\n                    <RobotOutlined style={{ color: '#52c41a' }} />\r\n                  )}\r\n                  <span style={{ marginLeft: 8 }}>{msg.content}</span>\r\n                </Text>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n        <Input\r\n          value={inputValue}\r\n          onChange={e => setInputValue(e.target.value)}\r\n          onPressEnter={handleSend}\r\n          placeholder=\"Ask a question about your documents...\"\r\n          disabled={isLoading || !fileUploaded}\r\n          style={{ flex: 1 }}\r\n        />\r\n        <SendOutlined\r\n          onClick={handleSend}\r\n          style={{\r\n            fontSize: 22,\r\n            color: isLoading || !fileUploaded ? '#d9d9d9' : '#1890ff',\r\n            cursor: isLoading || !fileUploaded ? 'not-allowed' : 'pointer',\r\n            transform: 'rotate(-45deg)',\r\n            transition: 'all 0.2s',\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QAPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
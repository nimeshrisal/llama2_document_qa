{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Home\\\\Desktop\\\\llama-qa\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Layout, Space } from \"antd\";\nimport UploadPage from \"./components/uploadPage\";\nimport QAInterface from \"./components/qaPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Header,\n  Content,\n  Footer\n} = Layout;\nconst App = () => {\n  _s();\n  const [fileList, setFileList] = useState([]);\n  const [question, setQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const handleUploadChange = info => {\n    setFileList(info.fileList.slice(-1));\n  };\n  const handleQuestionSubmit = () => {\n    if (!question.trim()) {\n      setError(\"Please enter a question.\");\n      return;\n    }\n    setError(\"\");\n    setLoading(true);\n    setAnswer(\"\");\n    setTimeout(() => {\n      setLoading(false);\n      setAnswer(\"This is a dummy AI-generated answer.\");\n    }, 1500);\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    style: {\n      minHeight: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      style: {\n        color: \"#fff\",\n        fontSize: \"1.5rem\"\n      },\n      children: \"AI Q&A System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      style: {\n        padding: \"2rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Space, {\n        direction: \"vertical\",\n        size: \"large\",\n        style: {\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(UploadPage, {\n          fileList: fileList,\n          onChange: handleUploadChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(QAInterface, {\n          question: question,\n          answer: answer,\n          loading: loading,\n          error: error,\n          onQuestionChange: e => setQuestion(e.target.value),\n          onSubmit: handleQuestionSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"\\xA9 2025 AI Q&A Interface\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"tt8vgbSjd/ZrdNxEaNpDndL1I3I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Layout","Space","UploadPage","QAInterface","jsxDEV","_jsxDEV","Header","Content","Footer","App","_s","fileList","setFileList","question","setQuestion","answer","setAnswer","loading","setLoading","error","setError","handleUploadChange","info","slice","handleQuestionSubmit","trim","setTimeout","style","minHeight","children","color","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","padding","direction","size","width","onChange","onQuestionChange","e","target","value","onSubmit","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/Home/Desktop/llama-qa/frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Layout, Space } from \"antd\";\nimport UploadPage from \"./components/uploadPage\";\nimport QAInterface from \"./components/qaPage\";\n\nconst { Header, Content, Footer } = Layout;\n\nconst App: React.FC = () => {\n  const [fileList, setFileList] = useState<any[]>([]);\n  const [question, setQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const handleUploadChange = (info: any) => {\n    setFileList(info.fileList.slice(-1));\n  };\n\n  const handleQuestionSubmit = () => {\n    if (!question.trim()) {\n      setError(\"Please enter a question.\");\n      return;\n    }\n\n    setError(\"\");\n    setLoading(true);\n    setAnswer(\"\");\n\n    setTimeout(() => {\n      setLoading(false);\n      setAnswer(\"This is a dummy AI-generated answer.\");\n    }, 1500);\n  };\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      <Header style={{ color: \"#fff\", fontSize: \"1.5rem\" }}>AI Q&A System</Header>\n      <Content style={{ padding: \"2rem\" }}>\n        <Space direction=\"vertical\" size=\"large\" style={{ width: \"100%\" }}>\n          <UploadPage fileList={fileList} onChange={handleUploadChange} />\n          <QAInterface\n            question={question}\n            answer={answer}\n            loading={loading}\n            error={error}\n            onQuestionChange={(e) => setQuestion(e.target.value)}\n            onSubmit={handleQuestionSubmit}\n          />\n        </Space>\n      </Content>\n      <Footer style={{ textAlign: \"center\" }}>Â© 2025 AI Q&A Interface</Footer>\n    </Layout>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}